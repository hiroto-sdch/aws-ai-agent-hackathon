services:
  # Database
  postgres:
    image: postgres:15
    container_name: investment-postgres
    environment:
      POSTGRES_DB: investment_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - investment-network

  # Redis Cache
  redis:
    image: redis:7
    container_name: investment-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - investment-network

  # Elasticsearch for RAG
  elasticsearch:
    image: elasticsearch:8.11.0
    container_name: investment-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - investment-network

  # Backend API
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: investment-api
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/investment_db
      - REDIS_URL=redis://redis:6379/0
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - elasticsearch
    volumes:
      - ./backend:/app
    networks:
      - investment-network
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: investment-frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - investment-network
    command: ["npm", "run", "dev"]

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:

networks:
  investment-network:
    driver: bridge